// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: views.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spelldawn.Protos {

  /// <summary>Holder for reflection information generated from views.proto</summary>
  public static partial class ViewsReflection {

    #region Descriptor
    /// <summary>File descriptor for views.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ViewsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgt2aWV3cy5wcm90bxIJc3BlbGxkYXduIiAKDVNwcml0ZUFkZHJlc3MSDwoH",
            "YWRkcmVzcxgBIAEoCSJGCghDYXJkSWNvbhIsCgpiYWNrZ3JvdW5kGAEgASgL",
            "Mhguc3BlbGxkYXduLlNwcml0ZUFkZHJlc3MSDAoEdGV4dBgCIAEoCSIYCghD",
            "YXJkVGV4dBIMCgR0ZXh0GAEgASgJIqsDCghDYXJkVmlldxIrCgljYXJkX2Jh",
            "Y2sYASABKAsyGC5zcGVsbGRhd24uU3ByaXRlQWRkcmVzcxIsCgpjYXJkX2Zy",
            "YW1lGAIgASgLMhguc3BlbGxkYXduLlNwcml0ZUFkZHJlc3MSKQoHd2ViYmlu",
            "ZxgDIAEoCzIYLnNwZWxsZGF3bi5TcHJpdGVBZGRyZXNzEicKBWpld2VsGAQg",
            "ASgLMhguc3BlbGxkYXduLlNwcml0ZUFkZHJlc3MSKgoNdG9wX2xlZnRfaWNv",
            "bhgFIAEoCzITLnNwZWxsZGF3bi5DYXJkSWNvbhIrCg50b3BfcmlnaHRfaWNv",
            "bhgGIAEoCzITLnNwZWxsZGF3bi5DYXJkSWNvbhItChBib3R0b21fbGVmdF9p",
            "Y29uGAcgASgLMhMuc3BlbGxkYXduLkNhcmRJY29uEi4KEWJvdHRvbV9yaWdo",
            "dF9pY29uGAggASgLMhMuc3BlbGxkYXduLkNhcmRJY29uEiYKCWNhcmRfdGV4",
            "dBgJIAEoCzITLnNwZWxsZGF3bi5DYXJkVGV4dBIQCghjYW5fcGxheRgKIAEo",
            "CEITqgIQU3BlbGxkYXduLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.SpriteAddress), global::Spelldawn.Protos.SpriteAddress.Parser, new[]{ "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.CardIcon), global::Spelldawn.Protos.CardIcon.Parser, new[]{ "Background", "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.CardText), global::Spelldawn.Protos.CardText.Parser, new[]{ "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.CardView), global::Spelldawn.Protos.CardView.Parser, new[]{ "CardBack", "CardFrame", "Webbing", "Jewel", "TopLeftIcon", "TopRightIcon", "BottomLeftIcon", "BottomRightIcon", "CardText", "CanPlay" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SpriteAddress : pb::IMessage<SpriteAddress>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpriteAddress> _parser = new pb::MessageParser<SpriteAddress>(() => new SpriteAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpriteAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.ViewsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpriteAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpriteAddress(SpriteAddress other) : this() {
      address_ = other.address_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpriteAddress Clone() {
      return new SpriteAddress(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpriteAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpriteAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpriteAddress other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CardIcon : pb::IMessage<CardIcon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CardIcon> _parser = new pb::MessageParser<CardIcon>(() => new CardIcon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardIcon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.ViewsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardIcon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardIcon(CardIcon other) : this() {
      background_ = other.background_ != null ? other.background_.Clone() : null;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardIcon Clone() {
      return new CardIcon(this);
    }

    /// <summary>Field number for the "background" field.</summary>
    public const int BackgroundFieldNumber = 1;
    private global::Spelldawn.Protos.SpriteAddress background_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress Background {
      get { return background_; }
      set {
        background_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardIcon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardIcon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Background, other.Background)) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (background_ != null) hash ^= Background.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (background_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Background);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (background_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Background);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (background_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Background);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardIcon other) {
      if (other == null) {
        return;
      }
      if (other.background_ != null) {
        if (background_ == null) {
          Background = new global::Spelldawn.Protos.SpriteAddress();
        }
        Background.MergeFrom(other.Background);
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (background_ == null) {
              Background = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Background);
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (background_ == null) {
              Background = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Background);
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CardText : pb::IMessage<CardText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CardText> _parser = new pb::MessageParser<CardText>(() => new CardText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.ViewsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardText(CardText other) : this() {
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardText Clone() {
      return new CardText(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardText other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CardView : pb::IMessage<CardView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CardView> _parser = new pb::MessageParser<CardView>(() => new CardView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.ViewsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardView(CardView other) : this() {
      cardBack_ = other.cardBack_ != null ? other.cardBack_.Clone() : null;
      cardFrame_ = other.cardFrame_ != null ? other.cardFrame_.Clone() : null;
      webbing_ = other.webbing_ != null ? other.webbing_.Clone() : null;
      jewel_ = other.jewel_ != null ? other.jewel_.Clone() : null;
      topLeftIcon_ = other.topLeftIcon_ != null ? other.topLeftIcon_.Clone() : null;
      topRightIcon_ = other.topRightIcon_ != null ? other.topRightIcon_.Clone() : null;
      bottomLeftIcon_ = other.bottomLeftIcon_ != null ? other.bottomLeftIcon_.Clone() : null;
      bottomRightIcon_ = other.bottomRightIcon_ != null ? other.bottomRightIcon_.Clone() : null;
      cardText_ = other.cardText_ != null ? other.cardText_.Clone() : null;
      canPlay_ = other.canPlay_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardView Clone() {
      return new CardView(this);
    }

    /// <summary>Field number for the "card_back" field.</summary>
    public const int CardBackFieldNumber = 1;
    private global::Spelldawn.Protos.SpriteAddress cardBack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress CardBack {
      get { return cardBack_; }
      set {
        cardBack_ = value;
      }
    }

    /// <summary>Field number for the "card_frame" field.</summary>
    public const int CardFrameFieldNumber = 2;
    private global::Spelldawn.Protos.SpriteAddress cardFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress CardFrame {
      get { return cardFrame_; }
      set {
        cardFrame_ = value;
      }
    }

    /// <summary>Field number for the "webbing" field.</summary>
    public const int WebbingFieldNumber = 3;
    private global::Spelldawn.Protos.SpriteAddress webbing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress Webbing {
      get { return webbing_; }
      set {
        webbing_ = value;
      }
    }

    /// <summary>Field number for the "jewel" field.</summary>
    public const int JewelFieldNumber = 4;
    private global::Spelldawn.Protos.SpriteAddress jewel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress Jewel {
      get { return jewel_; }
      set {
        jewel_ = value;
      }
    }

    /// <summary>Field number for the "top_left_icon" field.</summary>
    public const int TopLeftIconFieldNumber = 5;
    private global::Spelldawn.Protos.CardIcon topLeftIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardIcon TopLeftIcon {
      get { return topLeftIcon_; }
      set {
        topLeftIcon_ = value;
      }
    }

    /// <summary>Field number for the "top_right_icon" field.</summary>
    public const int TopRightIconFieldNumber = 6;
    private global::Spelldawn.Protos.CardIcon topRightIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardIcon TopRightIcon {
      get { return topRightIcon_; }
      set {
        topRightIcon_ = value;
      }
    }

    /// <summary>Field number for the "bottom_left_icon" field.</summary>
    public const int BottomLeftIconFieldNumber = 7;
    private global::Spelldawn.Protos.CardIcon bottomLeftIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardIcon BottomLeftIcon {
      get { return bottomLeftIcon_; }
      set {
        bottomLeftIcon_ = value;
      }
    }

    /// <summary>Field number for the "bottom_right_icon" field.</summary>
    public const int BottomRightIconFieldNumber = 8;
    private global::Spelldawn.Protos.CardIcon bottomRightIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardIcon BottomRightIcon {
      get { return bottomRightIcon_; }
      set {
        bottomRightIcon_ = value;
      }
    }

    /// <summary>Field number for the "card_text" field.</summary>
    public const int CardTextFieldNumber = 9;
    private global::Spelldawn.Protos.CardText cardText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardText CardText {
      get { return cardText_; }
      set {
        cardText_ = value;
      }
    }

    /// <summary>Field number for the "can_play" field.</summary>
    public const int CanPlayFieldNumber = 10;
    private bool canPlay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanPlay {
      get { return canPlay_; }
      set {
        canPlay_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CardBack, other.CardBack)) return false;
      if (!object.Equals(CardFrame, other.CardFrame)) return false;
      if (!object.Equals(Webbing, other.Webbing)) return false;
      if (!object.Equals(Jewel, other.Jewel)) return false;
      if (!object.Equals(TopLeftIcon, other.TopLeftIcon)) return false;
      if (!object.Equals(TopRightIcon, other.TopRightIcon)) return false;
      if (!object.Equals(BottomLeftIcon, other.BottomLeftIcon)) return false;
      if (!object.Equals(BottomRightIcon, other.BottomRightIcon)) return false;
      if (!object.Equals(CardText, other.CardText)) return false;
      if (CanPlay != other.CanPlay) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cardBack_ != null) hash ^= CardBack.GetHashCode();
      if (cardFrame_ != null) hash ^= CardFrame.GetHashCode();
      if (webbing_ != null) hash ^= Webbing.GetHashCode();
      if (jewel_ != null) hash ^= Jewel.GetHashCode();
      if (topLeftIcon_ != null) hash ^= TopLeftIcon.GetHashCode();
      if (topRightIcon_ != null) hash ^= TopRightIcon.GetHashCode();
      if (bottomLeftIcon_ != null) hash ^= BottomLeftIcon.GetHashCode();
      if (bottomRightIcon_ != null) hash ^= BottomRightIcon.GetHashCode();
      if (cardText_ != null) hash ^= CardText.GetHashCode();
      if (CanPlay != false) hash ^= CanPlay.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (cardBack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CardBack);
      }
      if (cardFrame_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CardFrame);
      }
      if (webbing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Webbing);
      }
      if (jewel_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Jewel);
      }
      if (topLeftIcon_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TopLeftIcon);
      }
      if (topRightIcon_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TopRightIcon);
      }
      if (bottomLeftIcon_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(BottomLeftIcon);
      }
      if (bottomRightIcon_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(BottomRightIcon);
      }
      if (cardText_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CardText);
      }
      if (CanPlay != false) {
        output.WriteRawTag(80);
        output.WriteBool(CanPlay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (cardBack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CardBack);
      }
      if (cardFrame_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CardFrame);
      }
      if (webbing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Webbing);
      }
      if (jewel_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Jewel);
      }
      if (topLeftIcon_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TopLeftIcon);
      }
      if (topRightIcon_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TopRightIcon);
      }
      if (bottomLeftIcon_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(BottomLeftIcon);
      }
      if (bottomRightIcon_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(BottomRightIcon);
      }
      if (cardText_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CardText);
      }
      if (CanPlay != false) {
        output.WriteRawTag(80);
        output.WriteBool(CanPlay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cardBack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CardBack);
      }
      if (cardFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CardFrame);
      }
      if (webbing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Webbing);
      }
      if (jewel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Jewel);
      }
      if (topLeftIcon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopLeftIcon);
      }
      if (topRightIcon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopRightIcon);
      }
      if (bottomLeftIcon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BottomLeftIcon);
      }
      if (bottomRightIcon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BottomRightIcon);
      }
      if (cardText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CardText);
      }
      if (CanPlay != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardView other) {
      if (other == null) {
        return;
      }
      if (other.cardBack_ != null) {
        if (cardBack_ == null) {
          CardBack = new global::Spelldawn.Protos.SpriteAddress();
        }
        CardBack.MergeFrom(other.CardBack);
      }
      if (other.cardFrame_ != null) {
        if (cardFrame_ == null) {
          CardFrame = new global::Spelldawn.Protos.SpriteAddress();
        }
        CardFrame.MergeFrom(other.CardFrame);
      }
      if (other.webbing_ != null) {
        if (webbing_ == null) {
          Webbing = new global::Spelldawn.Protos.SpriteAddress();
        }
        Webbing.MergeFrom(other.Webbing);
      }
      if (other.jewel_ != null) {
        if (jewel_ == null) {
          Jewel = new global::Spelldawn.Protos.SpriteAddress();
        }
        Jewel.MergeFrom(other.Jewel);
      }
      if (other.topLeftIcon_ != null) {
        if (topLeftIcon_ == null) {
          TopLeftIcon = new global::Spelldawn.Protos.CardIcon();
        }
        TopLeftIcon.MergeFrom(other.TopLeftIcon);
      }
      if (other.topRightIcon_ != null) {
        if (topRightIcon_ == null) {
          TopRightIcon = new global::Spelldawn.Protos.CardIcon();
        }
        TopRightIcon.MergeFrom(other.TopRightIcon);
      }
      if (other.bottomLeftIcon_ != null) {
        if (bottomLeftIcon_ == null) {
          BottomLeftIcon = new global::Spelldawn.Protos.CardIcon();
        }
        BottomLeftIcon.MergeFrom(other.BottomLeftIcon);
      }
      if (other.bottomRightIcon_ != null) {
        if (bottomRightIcon_ == null) {
          BottomRightIcon = new global::Spelldawn.Protos.CardIcon();
        }
        BottomRightIcon.MergeFrom(other.BottomRightIcon);
      }
      if (other.cardText_ != null) {
        if (cardText_ == null) {
          CardText = new global::Spelldawn.Protos.CardText();
        }
        CardText.MergeFrom(other.CardText);
      }
      if (other.CanPlay != false) {
        CanPlay = other.CanPlay;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cardBack_ == null) {
              CardBack = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(CardBack);
            break;
          }
          case 18: {
            if (cardFrame_ == null) {
              CardFrame = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(CardFrame);
            break;
          }
          case 26: {
            if (webbing_ == null) {
              Webbing = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Webbing);
            break;
          }
          case 34: {
            if (jewel_ == null) {
              Jewel = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Jewel);
            break;
          }
          case 42: {
            if (topLeftIcon_ == null) {
              TopLeftIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(TopLeftIcon);
            break;
          }
          case 50: {
            if (topRightIcon_ == null) {
              TopRightIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(TopRightIcon);
            break;
          }
          case 58: {
            if (bottomLeftIcon_ == null) {
              BottomLeftIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(BottomLeftIcon);
            break;
          }
          case 66: {
            if (bottomRightIcon_ == null) {
              BottomRightIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(BottomRightIcon);
            break;
          }
          case 74: {
            if (cardText_ == null) {
              CardText = new global::Spelldawn.Protos.CardText();
            }
            input.ReadMessage(CardText);
            break;
          }
          case 80: {
            CanPlay = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (cardBack_ == null) {
              CardBack = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(CardBack);
            break;
          }
          case 18: {
            if (cardFrame_ == null) {
              CardFrame = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(CardFrame);
            break;
          }
          case 26: {
            if (webbing_ == null) {
              Webbing = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Webbing);
            break;
          }
          case 34: {
            if (jewel_ == null) {
              Jewel = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Jewel);
            break;
          }
          case 42: {
            if (topLeftIcon_ == null) {
              TopLeftIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(TopLeftIcon);
            break;
          }
          case 50: {
            if (topRightIcon_ == null) {
              TopRightIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(TopRightIcon);
            break;
          }
          case 58: {
            if (bottomLeftIcon_ == null) {
              BottomLeftIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(BottomLeftIcon);
            break;
          }
          case 66: {
            if (bottomRightIcon_ == null) {
              BottomRightIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(BottomRightIcon);
            break;
          }
          case 74: {
            if (cardText_ == null) {
              CardText = new global::Spelldawn.Protos.CardText();
            }
            input.ReadMessage(CardText);
            break;
          }
          case 80: {
            CanPlay = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
