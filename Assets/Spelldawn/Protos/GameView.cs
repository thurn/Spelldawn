// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: game_view.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spelldawn.Protos {

  /// <summary>Holder for reflection information generated from game_view.proto</summary>
  public static partial class GameViewReflection {

    #region Descriptor
    /// <summary>File descriptor for game_view.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameViewReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9nYW1lX3ZpZXcucHJvdG8SAnNkGg1tYXNvbnJ5LnByb3RvGhVnYW1lX3By",
            "aW1pdGl2ZXMucHJvdG8iVwoIQ2FyZEljb24SJQoKYmFja2dyb3VuZBgBIAEo",
            "CzIRLnNkLlNwcml0ZUFkZHJlc3MSDAoEdGV4dBgCIAEoCRIWCg5zaG93bl9p",
            "bl9hcmVuYRgDIAEoCCLKAQoJQ2FyZEljb25zEiMKDXRvcF9sZWZ0X2ljb24Y",
            "DCABKAsyDC5zZC5DYXJkSWNvbhIkCg50b3BfcmlnaHRfaWNvbhgNIAEoCzIM",
            "LnNkLkNhcmRJY29uEicKEWJvdHRvbV9yaWdodF9pY29uGA4gASgLMgwuc2Qu",
            "Q2FyZEljb24SJgoQYm90dG9tX2xlZnRfaWNvbhgPIAEoCzIMLnNkLkNhcmRJ",
            "Y29uEiEKC2NlbnRlcl9pY29uGBAgASgLMgwuc2QuQ2FyZEljb24iGQoJQ2Fy",
            "ZFRpdGxlEgwKBHRleHQYASABKAkiGQoJUnVsZXNUZXh0EgwKBHRleHQYASAB",
            "KAkiLwoMVmFsaWRUYXJnZXRzEh8KB3RhcmdldHMYASADKAsyDi5zZC5DYXJk",
            "VGFyZ2V0IicKClZhbGlkUm9vbXMSGQoFcm9vbXMYAiADKAsyCi5zZC5Sb29t",
            "SWQiDAoKUGxheUFzSXRlbSIPCg1Bd2FpdFJlc3BvbnNlIsgBCg1DYXJkVGFy",
            "Z2V0aW5nEi0KEXBpY2tfZmlyc3RfdGFyZ2V0GAEgASgLMhAuc2QuVmFsaWRU",
            "YXJnZXRzSAASJgoMcGxheV9pbl9yb29tGAIgASgLMg4uc2QuVmFsaWRSb29t",
            "c0gAEiYKDHBsYXlfYXNfaXRlbRgDIAEoCzIOLnNkLlBsYXlBc0l0ZW1IABIr",
            "Cg5hd2FpdF9yZXNwb25zZRgEIAEoCzIRLnNkLkF3YWl0UmVzcG9uc2VIAEIL",
            "Cgl0YXJnZXRpbmciUQoIQ2FyZENvc3QSHQoIY2FuX3BsYXkYASABKA4yCy5z",
            "ZC5DYW5QbGF5EhEKCW1hbmFfY29zdBgCIAEoBRITCgthY3Rpb25fY29zdBgD",
            "IAEoBSLLAwoQUmV2ZWFsZWRDYXJkVmlldxIkCgljYXJkX2JhY2sYASABKAsy",
            "ES5zZC5TcHJpdGVBZGRyZXNzEiUKCmNhcmRfZnJhbWUYAiABKAsyES5zZC5T",
            "cHJpdGVBZGRyZXNzEisKEHRpdGxlX2JhY2tncm91bmQYAyABKAsyES5zZC5T",
            "cHJpdGVBZGRyZXNzEiAKBWpld2VsGAQgASgLMhEuc2QuU3ByaXRlQWRkcmVz",
            "cxIrChBpbWFnZV9iYWNrZ3JvdW5kGAUgASgLMhEuc2QuU3ByaXRlQWRkcmVz",
            "cxIgCgVpbWFnZRgGIAEoCzIRLnNkLlNwcml0ZUFkZHJlc3MSHAoFdGl0bGUY",
            "ByABKAsyDS5zZC5DYXJkVGl0bGUSIQoKcnVsZXNfdGV4dBgIIAEoCzINLnNk",
            "LlJ1bGVzVGV4dBImCgthcmVuYV9mcmFtZRgJIAEoCzIRLnNkLlNwcml0ZUFk",
            "ZHJlc3MSIQoKY2FyZF9pY29ucxgKIAEoCzINLnNkLkNhcmRJY29ucxIkCgl0",
            "YXJnZXRpbmcYCyABKAsyES5zZC5DYXJkVGFyZ2V0aW5nEhoKBGNvc3QYDCAB",
            "KAsyDC5zZC5DYXJkQ29zdCKBAQoOSGlkZGVuQ2FyZFZpZXcSJAoJY2FyZF9i",
            "YWNrGAEgASgLMhEuc2QuU3ByaXRlQWRkcmVzcxIhCgpjYXJkX2ljb25zGAIg",
            "ASgLMg0uc2QuQ2FyZEljb25zEiYKC2FyZW5hX2ZyYW1lGAMgASgLMhEuc2Qu",
            "U3ByaXRlQWRkcmVzcyK0AQoIQ2FyZFZpZXcSGwoHY2FyZF9pZBgBIAEoCzIK",
            "LnNkLkNhcmRJZBIpCg5hcmVuYV9wb3NpdGlvbhgCIAEoDjIRLnNkLkFyZW5h",
            "UG9zaXRpb24SLQoNcmV2ZWFsZWRfY2FyZBgDIAEoCzIULnNkLlJldmVhbGVk",
            "Q2FyZFZpZXdIABIpCgtoaWRkZW5fY2FyZBgEIAEoCzISLnNkLkhpZGRlbkNh",
            "cmRWaWV3SABCBgoEY2FyZCInCghIYW5kVmlldxIbCgVjYXJkcxgBIAMoCzIM",
            "LnNkLkNhcmRWaWV3Ii4KD0Rpc2NhcmRQaWxlVmlldxIbCgVjYXJkcxgBIAMo",
            "CzIMLnNkLkNhcmRWaWV3ImQKClBsYXllckluZm8SDAoEbmFtZRgBIAEoCRIj",
            "Cghwb3J0cmFpdBgCIAEoCzIRLnNkLlNwcml0ZUFkZHJlc3MSIwoNaWRlbnRp",
            "dHlfY2FyZBgDIAEoCzIMLnNkLkNhcmRWaWV3IhoKCE1hbmFWaWV3Eg4KBmFt",
            "b3VudBgBIAEoBSI+CglTY29yZVZpZXcSDQoFc2NvcmUYASABKAUSIgoMc2Nv",
            "cmVkX2NhcmRzGAIgAygLMgwuc2QuQ2FyZFZpZXciMAoIUm9vbUljb24SJAoJ",
            "cm9vbV9pY29uGAEgASgLMhEuc2QuU3ByaXRlQWRkcmVzcyJlCghSb29tVmll",
            "dxIbCgdyb29tX2lkGAEgASgLMgouc2QuUm9vbUlkEh8KCXJvb21faWNvbhgC",
            "IAEoCzIMLnNkLlJvb21JY29uEhsKBWNhcmRzGAMgAygLMgwuc2QuQ2FyZFZp",
            "ZXciYwoJQXJlbmFWaWV3EhwKFG92ZXJsb3JkX3BlcnNwZWN0aXZlGAEgASgI",
            "EhsKBXJvb21zGAIgAygLMgwuc2QuUm9vbVZpZXcSGwoFaXRlbXMYAyADKAsy",
            "DC5zZC5DYXJkVmlldyIzChFBY3Rpb25UcmFja2VyVmlldxIeChZhdmFpbGFi",
            "bGVfYWN0aW9uX2NvdW50GAEgASgFIgoKCERlY2tWaWV3Iv0BCgpQbGF5ZXJW",
            "aWV3EiMKC3BsYXllcl9pbmZvGAEgASgLMg4uc2QuUGxheWVySW5mbxIcCgVz",
            "Y29yZRgCIAEoCzINLnNkLlNjb3JlVmlldxIaCgRoYW5kGAMgASgLMgwuc2Qu",
            "SGFuZFZpZXcSGgoEbWFuYRgEIAEoCzIMLnNkLk1hbmFWaWV3EikKDGRpc2Nh",
            "cmRfcGlsZRgFIAEoCzITLnNkLkRpc2NhcmRQaWxlVmlldxItCg5hY3Rpb25f",
            "dHJhY2tlchgGIAEoCzIVLnNkLkFjdGlvblRyYWNrZXJWaWV3EhoKBGRlY2sY",
            "ByABKAsyDC5zZC5EZWNrVmlldyJoCghHYW1lVmlldxIcCgR1c2VyGAEgASgL",
            "Mg4uc2QuUGxheWVyVmlldxIgCghvcHBvbmVudBgCIAEoCzIOLnNkLlBsYXll",
            "clZpZXcSHAoFYXJlbmEYAyABKAsyDS5zZC5BcmVuYVZpZXcqXAoHQ2FuUGxh",
            "eRIYChRDQU5fUExBWV9VTlNQRUNJRklFRBAAEhQKEENBTl9QTEFZX0RFRkFV",
            "TFQQARIPCgtDQU5fUExBWV9OTxACEhAKDENBTl9QTEFZX1lFUxADKs0BCg1B",
            "cmVuYVBvc2l0aW9uEh4KGkFSRU5BX1BPU0lUSU9OX1VOU1BFQ0lGSUVEEAAS",
            "GgoWQVJFTkFfUE9TSVRJT05fSU5fUk9PTRABEiAKHEFSRU5BX1BPU0lUSU9O",
            "X1JPT01fREVGRU5ERVIQAhIdChlBUkVOQV9QT1NJVElPTl9JVEVNU19MRUZU",
            "EAMSHwobQVJFTkFfUE9TSVRJT05fSVRFTVNfQ0VOVEVSEAQSHgoaQVJFTkFf",
            "UE9TSVRJT05fSVRFTVNfUklHSFQQBUITqgIQU3BlbGxkYXduLlByb3Rvc2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spelldawn.Protos.MasonryReflection.Descriptor, global::Spelldawn.Protos.GamePrimitivesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Spelldawn.Protos.CanPlay), typeof(global::Spelldawn.Protos.ArenaPosition), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.CardIcon), global::Spelldawn.Protos.CardIcon.Parser, new[]{ "Background", "Text", "ShownInArena" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.CardIcons), global::Spelldawn.Protos.CardIcons.Parser, new[]{ "TopLeftIcon", "TopRightIcon", "BottomRightIcon", "BottomLeftIcon", "CenterIcon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.CardTitle), global::Spelldawn.Protos.CardTitle.Parser, new[]{ "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.RulesText), global::Spelldawn.Protos.RulesText.Parser, new[]{ "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.ValidTargets), global::Spelldawn.Protos.ValidTargets.Parser, new[]{ "Targets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.ValidRooms), global::Spelldawn.Protos.ValidRooms.Parser, new[]{ "Rooms" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.PlayAsItem), global::Spelldawn.Protos.PlayAsItem.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.AwaitResponse), global::Spelldawn.Protos.AwaitResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.CardTargeting), global::Spelldawn.Protos.CardTargeting.Parser, new[]{ "PickFirstTarget", "PlayInRoom", "PlayAsItem", "AwaitResponse" }, new[]{ "Targeting" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.CardCost), global::Spelldawn.Protos.CardCost.Parser, new[]{ "CanPlay", "ManaCost", "ActionCost" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.RevealedCardView), global::Spelldawn.Protos.RevealedCardView.Parser, new[]{ "CardBack", "CardFrame", "TitleBackground", "Jewel", "ImageBackground", "Image", "Title", "RulesText", "ArenaFrame", "CardIcons", "Targeting", "Cost" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.HiddenCardView), global::Spelldawn.Protos.HiddenCardView.Parser, new[]{ "CardBack", "CardIcons", "ArenaFrame" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.CardView), global::Spelldawn.Protos.CardView.Parser, new[]{ "CardId", "ArenaPosition", "RevealedCard", "HiddenCard" }, new[]{ "Card" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.HandView), global::Spelldawn.Protos.HandView.Parser, new[]{ "Cards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.DiscardPileView), global::Spelldawn.Protos.DiscardPileView.Parser, new[]{ "Cards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.PlayerInfo), global::Spelldawn.Protos.PlayerInfo.Parser, new[]{ "Name", "Portrait", "IdentityCard" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.ManaView), global::Spelldawn.Protos.ManaView.Parser, new[]{ "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.ScoreView), global::Spelldawn.Protos.ScoreView.Parser, new[]{ "Score", "ScoredCards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.RoomIcon), global::Spelldawn.Protos.RoomIcon.Parser, new[]{ "RoomIcon_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.RoomView), global::Spelldawn.Protos.RoomView.Parser, new[]{ "RoomId", "RoomIcon", "Cards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.ArenaView), global::Spelldawn.Protos.ArenaView.Parser, new[]{ "OverlordPerspective", "Rooms", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.ActionTrackerView), global::Spelldawn.Protos.ActionTrackerView.Parser, new[]{ "AvailableActionCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.DeckView), global::Spelldawn.Protos.DeckView.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.PlayerView), global::Spelldawn.Protos.PlayerView.Parser, new[]{ "PlayerInfo", "Score", "Hand", "Mana", "DiscardPile", "ActionTracker", "Deck" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spelldawn.Protos.GameView), global::Spelldawn.Protos.GameView.Parser, new[]{ "User", "Opponent", "Arena" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///* How to determine whether the card can be played. 
  /// </summary>
  public enum CanPlay {
    [pbr::OriginalName("CAN_PLAY_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    ///* The card can be played if mana &amp; actions are available. 
    /// </summary>
    [pbr::OriginalName("CAN_PLAY_DEFAULT")] Default = 1,
    /// <summary>
    ///* Never display this card optimistically as a valid play 
    /// </summary>
    [pbr::OriginalName("CAN_PLAY_NO")] No = 2,
    /// <summary>
    ///* Always display this card optimistically as a valid play 
    /// </summary>
    [pbr::OriginalName("CAN_PLAY_YES")] Yes = 3,
  }

  /// <summary>
  ///* Where in the arena should this card be displayed? 
  /// </summary>
  public enum ArenaPosition {
    [pbr::OriginalName("ARENA_POSITION_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("ARENA_POSITION_IN_ROOM")] InRoom = 1,
    [pbr::OriginalName("ARENA_POSITION_ROOM_DEFENDER")] RoomDefender = 2,
    [pbr::OriginalName("ARENA_POSITION_ITEMS_LEFT")] ItemsLeft = 3,
    [pbr::OriginalName("ARENA_POSITION_ITEMS_CENTER")] ItemsCenter = 4,
    [pbr::OriginalName("ARENA_POSITION_ITEMS_RIGHT")] ItemsRight = 5,
  }

  #endregion

  #region Messages
  public sealed partial class CardIcon : pb::IMessage<CardIcon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CardIcon> _parser = new pb::MessageParser<CardIcon>(() => new CardIcon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardIcon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardIcon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardIcon(CardIcon other) : this() {
      background_ = other.background_ != null ? other.background_.Clone() : null;
      text_ = other.text_;
      shownInArena_ = other.shownInArena_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardIcon Clone() {
      return new CardIcon(this);
    }

    /// <summary>Field number for the "background" field.</summary>
    public const int BackgroundFieldNumber = 1;
    private global::Spelldawn.Protos.SpriteAddress background_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress Background {
      get { return background_; }
      set {
        background_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shown_in_arena" field.</summary>
    public const int ShownInArenaFieldNumber = 3;
    private bool shownInArena_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShownInArena {
      get { return shownInArena_; }
      set {
        shownInArena_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardIcon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardIcon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Background, other.Background)) return false;
      if (Text != other.Text) return false;
      if (ShownInArena != other.ShownInArena) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (background_ != null) hash ^= Background.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (ShownInArena != false) hash ^= ShownInArena.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (background_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Background);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (ShownInArena != false) {
        output.WriteRawTag(24);
        output.WriteBool(ShownInArena);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (background_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Background);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (ShownInArena != false) {
        output.WriteRawTag(24);
        output.WriteBool(ShownInArena);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (background_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Background);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (ShownInArena != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardIcon other) {
      if (other == null) {
        return;
      }
      if (other.background_ != null) {
        if (background_ == null) {
          Background = new global::Spelldawn.Protos.SpriteAddress();
        }
        Background.MergeFrom(other.Background);
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.ShownInArena != false) {
        ShownInArena = other.ShownInArena;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (background_ == null) {
              Background = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Background);
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 24: {
            ShownInArena = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (background_ == null) {
              Background = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Background);
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 24: {
            ShownInArena = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CardIcons : pb::IMessage<CardIcons>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CardIcons> _parser = new pb::MessageParser<CardIcons>(() => new CardIcons());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardIcons> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardIcons() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardIcons(CardIcons other) : this() {
      topLeftIcon_ = other.topLeftIcon_ != null ? other.topLeftIcon_.Clone() : null;
      topRightIcon_ = other.topRightIcon_ != null ? other.topRightIcon_.Clone() : null;
      bottomRightIcon_ = other.bottomRightIcon_ != null ? other.bottomRightIcon_.Clone() : null;
      bottomLeftIcon_ = other.bottomLeftIcon_ != null ? other.bottomLeftIcon_.Clone() : null;
      centerIcon_ = other.centerIcon_ != null ? other.centerIcon_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardIcons Clone() {
      return new CardIcons(this);
    }

    /// <summary>Field number for the "top_left_icon" field.</summary>
    public const int TopLeftIconFieldNumber = 12;
    private global::Spelldawn.Protos.CardIcon topLeftIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardIcon TopLeftIcon {
      get { return topLeftIcon_; }
      set {
        topLeftIcon_ = value;
      }
    }

    /// <summary>Field number for the "top_right_icon" field.</summary>
    public const int TopRightIconFieldNumber = 13;
    private global::Spelldawn.Protos.CardIcon topRightIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardIcon TopRightIcon {
      get { return topRightIcon_; }
      set {
        topRightIcon_ = value;
      }
    }

    /// <summary>Field number for the "bottom_right_icon" field.</summary>
    public const int BottomRightIconFieldNumber = 14;
    private global::Spelldawn.Protos.CardIcon bottomRightIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardIcon BottomRightIcon {
      get { return bottomRightIcon_; }
      set {
        bottomRightIcon_ = value;
      }
    }

    /// <summary>Field number for the "bottom_left_icon" field.</summary>
    public const int BottomLeftIconFieldNumber = 15;
    private global::Spelldawn.Protos.CardIcon bottomLeftIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardIcon BottomLeftIcon {
      get { return bottomLeftIcon_; }
      set {
        bottomLeftIcon_ = value;
      }
    }

    /// <summary>Field number for the "center_icon" field.</summary>
    public const int CenterIconFieldNumber = 16;
    private global::Spelldawn.Protos.CardIcon centerIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardIcon CenterIcon {
      get { return centerIcon_; }
      set {
        centerIcon_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardIcons);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardIcons other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TopLeftIcon, other.TopLeftIcon)) return false;
      if (!object.Equals(TopRightIcon, other.TopRightIcon)) return false;
      if (!object.Equals(BottomRightIcon, other.BottomRightIcon)) return false;
      if (!object.Equals(BottomLeftIcon, other.BottomLeftIcon)) return false;
      if (!object.Equals(CenterIcon, other.CenterIcon)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (topLeftIcon_ != null) hash ^= TopLeftIcon.GetHashCode();
      if (topRightIcon_ != null) hash ^= TopRightIcon.GetHashCode();
      if (bottomRightIcon_ != null) hash ^= BottomRightIcon.GetHashCode();
      if (bottomLeftIcon_ != null) hash ^= BottomLeftIcon.GetHashCode();
      if (centerIcon_ != null) hash ^= CenterIcon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (topLeftIcon_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(TopLeftIcon);
      }
      if (topRightIcon_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(TopRightIcon);
      }
      if (bottomRightIcon_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(BottomRightIcon);
      }
      if (bottomLeftIcon_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(BottomLeftIcon);
      }
      if (centerIcon_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CenterIcon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (topLeftIcon_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(TopLeftIcon);
      }
      if (topRightIcon_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(TopRightIcon);
      }
      if (bottomRightIcon_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(BottomRightIcon);
      }
      if (bottomLeftIcon_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(BottomLeftIcon);
      }
      if (centerIcon_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CenterIcon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (topLeftIcon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopLeftIcon);
      }
      if (topRightIcon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopRightIcon);
      }
      if (bottomRightIcon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BottomRightIcon);
      }
      if (bottomLeftIcon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BottomLeftIcon);
      }
      if (centerIcon_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CenterIcon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardIcons other) {
      if (other == null) {
        return;
      }
      if (other.topLeftIcon_ != null) {
        if (topLeftIcon_ == null) {
          TopLeftIcon = new global::Spelldawn.Protos.CardIcon();
        }
        TopLeftIcon.MergeFrom(other.TopLeftIcon);
      }
      if (other.topRightIcon_ != null) {
        if (topRightIcon_ == null) {
          TopRightIcon = new global::Spelldawn.Protos.CardIcon();
        }
        TopRightIcon.MergeFrom(other.TopRightIcon);
      }
      if (other.bottomRightIcon_ != null) {
        if (bottomRightIcon_ == null) {
          BottomRightIcon = new global::Spelldawn.Protos.CardIcon();
        }
        BottomRightIcon.MergeFrom(other.BottomRightIcon);
      }
      if (other.bottomLeftIcon_ != null) {
        if (bottomLeftIcon_ == null) {
          BottomLeftIcon = new global::Spelldawn.Protos.CardIcon();
        }
        BottomLeftIcon.MergeFrom(other.BottomLeftIcon);
      }
      if (other.centerIcon_ != null) {
        if (centerIcon_ == null) {
          CenterIcon = new global::Spelldawn.Protos.CardIcon();
        }
        CenterIcon.MergeFrom(other.CenterIcon);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 98: {
            if (topLeftIcon_ == null) {
              TopLeftIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(TopLeftIcon);
            break;
          }
          case 106: {
            if (topRightIcon_ == null) {
              TopRightIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(TopRightIcon);
            break;
          }
          case 114: {
            if (bottomRightIcon_ == null) {
              BottomRightIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(BottomRightIcon);
            break;
          }
          case 122: {
            if (bottomLeftIcon_ == null) {
              BottomLeftIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(BottomLeftIcon);
            break;
          }
          case 130: {
            if (centerIcon_ == null) {
              CenterIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(CenterIcon);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 98: {
            if (topLeftIcon_ == null) {
              TopLeftIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(TopLeftIcon);
            break;
          }
          case 106: {
            if (topRightIcon_ == null) {
              TopRightIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(TopRightIcon);
            break;
          }
          case 114: {
            if (bottomRightIcon_ == null) {
              BottomRightIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(BottomRightIcon);
            break;
          }
          case 122: {
            if (bottomLeftIcon_ == null) {
              BottomLeftIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(BottomLeftIcon);
            break;
          }
          case 130: {
            if (centerIcon_ == null) {
              CenterIcon = new global::Spelldawn.Protos.CardIcon();
            }
            input.ReadMessage(CenterIcon);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CardTitle : pb::IMessage<CardTitle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CardTitle> _parser = new pb::MessageParser<CardTitle>(() => new CardTitle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardTitle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardTitle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardTitle(CardTitle other) : this() {
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardTitle Clone() {
      return new CardTitle(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardTitle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardTitle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardTitle other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RulesText : pb::IMessage<RulesText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RulesText> _parser = new pb::MessageParser<RulesText>(() => new RulesText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RulesText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RulesText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RulesText(RulesText other) : this() {
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RulesText Clone() {
      return new RulesText(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RulesText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RulesText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RulesText other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ValidTargets : pb::IMessage<ValidTargets>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValidTargets> _parser = new pb::MessageParser<ValidTargets>(() => new ValidTargets());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValidTargets> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidTargets() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidTargets(ValidTargets other) : this() {
      targets_ = other.targets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidTargets Clone() {
      return new ValidTargets(this);
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Spelldawn.Protos.CardTarget> _repeated_targets_codec
        = pb::FieldCodec.ForMessage(10, global::Spelldawn.Protos.CardTarget.Parser);
    private readonly pbc::RepeatedField<global::Spelldawn.Protos.CardTarget> targets_ = new pbc::RepeatedField<global::Spelldawn.Protos.CardTarget>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Spelldawn.Protos.CardTarget> Targets {
      get { return targets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValidTargets);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValidTargets other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!targets_.Equals(other.targets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= targets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      targets_.WriteTo(output, _repeated_targets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      targets_.WriteTo(ref output, _repeated_targets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += targets_.CalculateSize(_repeated_targets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValidTargets other) {
      if (other == null) {
        return;
      }
      targets_.Add(other.targets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            targets_.AddEntriesFrom(input, _repeated_targets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            targets_.AddEntriesFrom(ref input, _repeated_targets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ValidRooms : pb::IMessage<ValidRooms>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValidRooms> _parser = new pb::MessageParser<ValidRooms>(() => new ValidRooms());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValidRooms> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidRooms() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidRooms(ValidRooms other) : this() {
      rooms_ = other.rooms_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidRooms Clone() {
      return new ValidRooms(this);
    }

    /// <summary>Field number for the "rooms" field.</summary>
    public const int RoomsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Spelldawn.Protos.RoomId> _repeated_rooms_codec
        = pb::FieldCodec.ForMessage(18, global::Spelldawn.Protos.RoomId.Parser);
    private readonly pbc::RepeatedField<global::Spelldawn.Protos.RoomId> rooms_ = new pbc::RepeatedField<global::Spelldawn.Protos.RoomId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Spelldawn.Protos.RoomId> Rooms {
      get { return rooms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValidRooms);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValidRooms other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rooms_.Equals(other.rooms_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rooms_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rooms_.WriteTo(output, _repeated_rooms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rooms_.WriteTo(ref output, _repeated_rooms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rooms_.CalculateSize(_repeated_rooms_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValidRooms other) {
      if (other == null) {
        return;
      }
      rooms_.Add(other.rooms_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            rooms_.AddEntriesFrom(input, _repeated_rooms_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            rooms_.AddEntriesFrom(ref input, _repeated_rooms_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayAsItem : pb::IMessage<PlayAsItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayAsItem> _parser = new pb::MessageParser<PlayAsItem>(() => new PlayAsItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayAsItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayAsItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayAsItem(PlayAsItem other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayAsItem Clone() {
      return new PlayAsItem(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayAsItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayAsItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayAsItem other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class AwaitResponse : pb::IMessage<AwaitResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwaitResponse> _parser = new pb::MessageParser<AwaitResponse>(() => new AwaitResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AwaitResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwaitResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwaitResponse(AwaitResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwaitResponse Clone() {
      return new AwaitResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AwaitResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AwaitResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AwaitResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CardTargeting : pb::IMessage<CardTargeting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CardTargeting> _parser = new pb::MessageParser<CardTargeting>(() => new CardTargeting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardTargeting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardTargeting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardTargeting(CardTargeting other) : this() {
      switch (other.TargetingCase) {
        case TargetingOneofCase.PickFirstTarget:
          PickFirstTarget = other.PickFirstTarget.Clone();
          break;
        case TargetingOneofCase.PlayInRoom:
          PlayInRoom = other.PlayInRoom.Clone();
          break;
        case TargetingOneofCase.PlayAsItem:
          PlayAsItem = other.PlayAsItem.Clone();
          break;
        case TargetingOneofCase.AwaitResponse:
          AwaitResponse = other.AwaitResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardTargeting Clone() {
      return new CardTargeting(this);
    }

    /// <summary>Field number for the "pick_first_target" field.</summary>
    public const int PickFirstTargetFieldNumber = 1;
    /// <summary>
    ///* Pick one of these targets and then animate to the display area when played. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.ValidTargets PickFirstTarget {
      get { return targetingCase_ == TargetingOneofCase.PickFirstTarget ? (global::Spelldawn.Protos.ValidTargets) targeting_ : null; }
      set {
        targeting_ = value;
        targetingCase_ = value == null ? TargetingOneofCase.None : TargetingOneofCase.PickFirstTarget;
      }
    }

    /// <summary>Field number for the "play_in_room" field.</summary>
    public const int PlayInRoomFieldNumber = 2;
    /// <summary>
    ///* Add this card to a room when played. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.ValidRooms PlayInRoom {
      get { return targetingCase_ == TargetingOneofCase.PlayInRoom ? (global::Spelldawn.Protos.ValidRooms) targeting_ : null; }
      set {
        targeting_ = value;
        targetingCase_ = value == null ? TargetingOneofCase.None : TargetingOneofCase.PlayInRoom;
      }
    }

    /// <summary>Field number for the "play_as_item" field.</summary>
    public const int PlayAsItemFieldNumber = 3;
    /// <summary>
    ///* Add this card to the items in the arena when played 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.PlayAsItem PlayAsItem {
      get { return targetingCase_ == TargetingOneofCase.PlayAsItem ? (global::Spelldawn.Protos.PlayAsItem) targeting_ : null; }
      set {
        targeting_ = value;
        targetingCase_ = value == null ? TargetingOneofCase.None : TargetingOneofCase.PlayAsItem;
      }
    }

    /// <summary>Field number for the "await_response" field.</summary>
    public const int AwaitResponseFieldNumber = 4;
    /// <summary>
    ///* Animate this card to the 'display' area when played 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.AwaitResponse AwaitResponse {
      get { return targetingCase_ == TargetingOneofCase.AwaitResponse ? (global::Spelldawn.Protos.AwaitResponse) targeting_ : null; }
      set {
        targeting_ = value;
        targetingCase_ = value == null ? TargetingOneofCase.None : TargetingOneofCase.AwaitResponse;
      }
    }

    private object targeting_;
    /// <summary>Enum of possible cases for the "targeting" oneof.</summary>
    public enum TargetingOneofCase {
      None = 0,
      PickFirstTarget = 1,
      PlayInRoom = 2,
      PlayAsItem = 3,
      AwaitResponse = 4,
    }
    private TargetingOneofCase targetingCase_ = TargetingOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetingOneofCase TargetingCase {
      get { return targetingCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargeting() {
      targetingCase_ = TargetingOneofCase.None;
      targeting_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardTargeting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardTargeting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PickFirstTarget, other.PickFirstTarget)) return false;
      if (!object.Equals(PlayInRoom, other.PlayInRoom)) return false;
      if (!object.Equals(PlayAsItem, other.PlayAsItem)) return false;
      if (!object.Equals(AwaitResponse, other.AwaitResponse)) return false;
      if (TargetingCase != other.TargetingCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (targetingCase_ == TargetingOneofCase.PickFirstTarget) hash ^= PickFirstTarget.GetHashCode();
      if (targetingCase_ == TargetingOneofCase.PlayInRoom) hash ^= PlayInRoom.GetHashCode();
      if (targetingCase_ == TargetingOneofCase.PlayAsItem) hash ^= PlayAsItem.GetHashCode();
      if (targetingCase_ == TargetingOneofCase.AwaitResponse) hash ^= AwaitResponse.GetHashCode();
      hash ^= (int) targetingCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (targetingCase_ == TargetingOneofCase.PickFirstTarget) {
        output.WriteRawTag(10);
        output.WriteMessage(PickFirstTarget);
      }
      if (targetingCase_ == TargetingOneofCase.PlayInRoom) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayInRoom);
      }
      if (targetingCase_ == TargetingOneofCase.PlayAsItem) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayAsItem);
      }
      if (targetingCase_ == TargetingOneofCase.AwaitResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(AwaitResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (targetingCase_ == TargetingOneofCase.PickFirstTarget) {
        output.WriteRawTag(10);
        output.WriteMessage(PickFirstTarget);
      }
      if (targetingCase_ == TargetingOneofCase.PlayInRoom) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayInRoom);
      }
      if (targetingCase_ == TargetingOneofCase.PlayAsItem) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayAsItem);
      }
      if (targetingCase_ == TargetingOneofCase.AwaitResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(AwaitResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (targetingCase_ == TargetingOneofCase.PickFirstTarget) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PickFirstTarget);
      }
      if (targetingCase_ == TargetingOneofCase.PlayInRoom) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayInRoom);
      }
      if (targetingCase_ == TargetingOneofCase.PlayAsItem) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayAsItem);
      }
      if (targetingCase_ == TargetingOneofCase.AwaitResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AwaitResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardTargeting other) {
      if (other == null) {
        return;
      }
      switch (other.TargetingCase) {
        case TargetingOneofCase.PickFirstTarget:
          if (PickFirstTarget == null) {
            PickFirstTarget = new global::Spelldawn.Protos.ValidTargets();
          }
          PickFirstTarget.MergeFrom(other.PickFirstTarget);
          break;
        case TargetingOneofCase.PlayInRoom:
          if (PlayInRoom == null) {
            PlayInRoom = new global::Spelldawn.Protos.ValidRooms();
          }
          PlayInRoom.MergeFrom(other.PlayInRoom);
          break;
        case TargetingOneofCase.PlayAsItem:
          if (PlayAsItem == null) {
            PlayAsItem = new global::Spelldawn.Protos.PlayAsItem();
          }
          PlayAsItem.MergeFrom(other.PlayAsItem);
          break;
        case TargetingOneofCase.AwaitResponse:
          if (AwaitResponse == null) {
            AwaitResponse = new global::Spelldawn.Protos.AwaitResponse();
          }
          AwaitResponse.MergeFrom(other.AwaitResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Spelldawn.Protos.ValidTargets subBuilder = new global::Spelldawn.Protos.ValidTargets();
            if (targetingCase_ == TargetingOneofCase.PickFirstTarget) {
              subBuilder.MergeFrom(PickFirstTarget);
            }
            input.ReadMessage(subBuilder);
            PickFirstTarget = subBuilder;
            break;
          }
          case 18: {
            global::Spelldawn.Protos.ValidRooms subBuilder = new global::Spelldawn.Protos.ValidRooms();
            if (targetingCase_ == TargetingOneofCase.PlayInRoom) {
              subBuilder.MergeFrom(PlayInRoom);
            }
            input.ReadMessage(subBuilder);
            PlayInRoom = subBuilder;
            break;
          }
          case 26: {
            global::Spelldawn.Protos.PlayAsItem subBuilder = new global::Spelldawn.Protos.PlayAsItem();
            if (targetingCase_ == TargetingOneofCase.PlayAsItem) {
              subBuilder.MergeFrom(PlayAsItem);
            }
            input.ReadMessage(subBuilder);
            PlayAsItem = subBuilder;
            break;
          }
          case 34: {
            global::Spelldawn.Protos.AwaitResponse subBuilder = new global::Spelldawn.Protos.AwaitResponse();
            if (targetingCase_ == TargetingOneofCase.AwaitResponse) {
              subBuilder.MergeFrom(AwaitResponse);
            }
            input.ReadMessage(subBuilder);
            AwaitResponse = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Spelldawn.Protos.ValidTargets subBuilder = new global::Spelldawn.Protos.ValidTargets();
            if (targetingCase_ == TargetingOneofCase.PickFirstTarget) {
              subBuilder.MergeFrom(PickFirstTarget);
            }
            input.ReadMessage(subBuilder);
            PickFirstTarget = subBuilder;
            break;
          }
          case 18: {
            global::Spelldawn.Protos.ValidRooms subBuilder = new global::Spelldawn.Protos.ValidRooms();
            if (targetingCase_ == TargetingOneofCase.PlayInRoom) {
              subBuilder.MergeFrom(PlayInRoom);
            }
            input.ReadMessage(subBuilder);
            PlayInRoom = subBuilder;
            break;
          }
          case 26: {
            global::Spelldawn.Protos.PlayAsItem subBuilder = new global::Spelldawn.Protos.PlayAsItem();
            if (targetingCase_ == TargetingOneofCase.PlayAsItem) {
              subBuilder.MergeFrom(PlayAsItem);
            }
            input.ReadMessage(subBuilder);
            PlayAsItem = subBuilder;
            break;
          }
          case 34: {
            global::Spelldawn.Protos.AwaitResponse subBuilder = new global::Spelldawn.Protos.AwaitResponse();
            if (targetingCase_ == TargetingOneofCase.AwaitResponse) {
              subBuilder.MergeFrom(AwaitResponse);
            }
            input.ReadMessage(subBuilder);
            AwaitResponse = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CardCost : pb::IMessage<CardCost>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CardCost> _parser = new pb::MessageParser<CardCost>(() => new CardCost());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardCost> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCost() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCost(CardCost other) : this() {
      canPlay_ = other.canPlay_;
      manaCost_ = other.manaCost_;
      actionCost_ = other.actionCost_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCost Clone() {
      return new CardCost(this);
    }

    /// <summary>Field number for the "can_play" field.</summary>
    public const int CanPlayFieldNumber = 1;
    private global::Spelldawn.Protos.CanPlay canPlay_ = global::Spelldawn.Protos.CanPlay.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CanPlay CanPlay {
      get { return canPlay_; }
      set {
        canPlay_ = value;
      }
    }

    /// <summary>Field number for the "mana_cost" field.</summary>
    public const int ManaCostFieldNumber = 2;
    private int manaCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ManaCost {
      get { return manaCost_; }
      set {
        manaCost_ = value;
      }
    }

    /// <summary>Field number for the "action_cost" field.</summary>
    public const int ActionCostFieldNumber = 3;
    private int actionCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActionCost {
      get { return actionCost_; }
      set {
        actionCost_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardCost);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardCost other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CanPlay != other.CanPlay) return false;
      if (ManaCost != other.ManaCost) return false;
      if (ActionCost != other.ActionCost) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CanPlay != global::Spelldawn.Protos.CanPlay.Unspecified) hash ^= CanPlay.GetHashCode();
      if (ManaCost != 0) hash ^= ManaCost.GetHashCode();
      if (ActionCost != 0) hash ^= ActionCost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CanPlay != global::Spelldawn.Protos.CanPlay.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CanPlay);
      }
      if (ManaCost != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ManaCost);
      }
      if (ActionCost != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ActionCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CanPlay != global::Spelldawn.Protos.CanPlay.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CanPlay);
      }
      if (ManaCost != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ManaCost);
      }
      if (ActionCost != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ActionCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CanPlay != global::Spelldawn.Protos.CanPlay.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CanPlay);
      }
      if (ManaCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ManaCost);
      }
      if (ActionCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionCost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardCost other) {
      if (other == null) {
        return;
      }
      if (other.CanPlay != global::Spelldawn.Protos.CanPlay.Unspecified) {
        CanPlay = other.CanPlay;
      }
      if (other.ManaCost != 0) {
        ManaCost = other.ManaCost;
      }
      if (other.ActionCost != 0) {
        ActionCost = other.ActionCost;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CanPlay = (global::Spelldawn.Protos.CanPlay) input.ReadEnum();
            break;
          }
          case 16: {
            ManaCost = input.ReadInt32();
            break;
          }
          case 24: {
            ActionCost = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CanPlay = (global::Spelldawn.Protos.CanPlay) input.ReadEnum();
            break;
          }
          case 16: {
            ManaCost = input.ReadInt32();
            break;
          }
          case 24: {
            ActionCost = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RevealedCardView : pb::IMessage<RevealedCardView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RevealedCardView> _parser = new pb::MessageParser<RevealedCardView>(() => new RevealedCardView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RevealedCardView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevealedCardView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevealedCardView(RevealedCardView other) : this() {
      cardBack_ = other.cardBack_ != null ? other.cardBack_.Clone() : null;
      cardFrame_ = other.cardFrame_ != null ? other.cardFrame_.Clone() : null;
      titleBackground_ = other.titleBackground_ != null ? other.titleBackground_.Clone() : null;
      jewel_ = other.jewel_ != null ? other.jewel_.Clone() : null;
      imageBackground_ = other.imageBackground_ != null ? other.imageBackground_.Clone() : null;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      title_ = other.title_ != null ? other.title_.Clone() : null;
      rulesText_ = other.rulesText_ != null ? other.rulesText_.Clone() : null;
      arenaFrame_ = other.arenaFrame_ != null ? other.arenaFrame_.Clone() : null;
      cardIcons_ = other.cardIcons_ != null ? other.cardIcons_.Clone() : null;
      targeting_ = other.targeting_ != null ? other.targeting_.Clone() : null;
      cost_ = other.cost_ != null ? other.cost_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevealedCardView Clone() {
      return new RevealedCardView(this);
    }

    /// <summary>Field number for the "card_back" field.</summary>
    public const int CardBackFieldNumber = 1;
    private global::Spelldawn.Protos.SpriteAddress cardBack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress CardBack {
      get { return cardBack_; }
      set {
        cardBack_ = value;
      }
    }

    /// <summary>Field number for the "card_frame" field.</summary>
    public const int CardFrameFieldNumber = 2;
    private global::Spelldawn.Protos.SpriteAddress cardFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress CardFrame {
      get { return cardFrame_; }
      set {
        cardFrame_ = value;
      }
    }

    /// <summary>Field number for the "title_background" field.</summary>
    public const int TitleBackgroundFieldNumber = 3;
    private global::Spelldawn.Protos.SpriteAddress titleBackground_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress TitleBackground {
      get { return titleBackground_; }
      set {
        titleBackground_ = value;
      }
    }

    /// <summary>Field number for the "jewel" field.</summary>
    public const int JewelFieldNumber = 4;
    private global::Spelldawn.Protos.SpriteAddress jewel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress Jewel {
      get { return jewel_; }
      set {
        jewel_ = value;
      }
    }

    /// <summary>Field number for the "image_background" field.</summary>
    public const int ImageBackgroundFieldNumber = 5;
    private global::Spelldawn.Protos.SpriteAddress imageBackground_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress ImageBackground {
      get { return imageBackground_; }
      set {
        imageBackground_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 6;
    private global::Spelldawn.Protos.SpriteAddress image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 7;
    private global::Spelldawn.Protos.CardTitle title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardTitle Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }

    /// <summary>Field number for the "rules_text" field.</summary>
    public const int RulesTextFieldNumber = 8;
    private global::Spelldawn.Protos.RulesText rulesText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.RulesText RulesText {
      get { return rulesText_; }
      set {
        rulesText_ = value;
      }
    }

    /// <summary>Field number for the "arena_frame" field.</summary>
    public const int ArenaFrameFieldNumber = 9;
    private global::Spelldawn.Protos.SpriteAddress arenaFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress ArenaFrame {
      get { return arenaFrame_; }
      set {
        arenaFrame_ = value;
      }
    }

    /// <summary>Field number for the "card_icons" field.</summary>
    public const int CardIconsFieldNumber = 10;
    private global::Spelldawn.Protos.CardIcons cardIcons_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardIcons CardIcons {
      get { return cardIcons_; }
      set {
        cardIcons_ = value;
      }
    }

    /// <summary>Field number for the "targeting" field.</summary>
    public const int TargetingFieldNumber = 11;
    private global::Spelldawn.Protos.CardTargeting targeting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardTargeting Targeting {
      get { return targeting_; }
      set {
        targeting_ = value;
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 12;
    private global::Spelldawn.Protos.CardCost cost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardCost Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RevealedCardView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RevealedCardView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CardBack, other.CardBack)) return false;
      if (!object.Equals(CardFrame, other.CardFrame)) return false;
      if (!object.Equals(TitleBackground, other.TitleBackground)) return false;
      if (!object.Equals(Jewel, other.Jewel)) return false;
      if (!object.Equals(ImageBackground, other.ImageBackground)) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (!object.Equals(Title, other.Title)) return false;
      if (!object.Equals(RulesText, other.RulesText)) return false;
      if (!object.Equals(ArenaFrame, other.ArenaFrame)) return false;
      if (!object.Equals(CardIcons, other.CardIcons)) return false;
      if (!object.Equals(Targeting, other.Targeting)) return false;
      if (!object.Equals(Cost, other.Cost)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cardBack_ != null) hash ^= CardBack.GetHashCode();
      if (cardFrame_ != null) hash ^= CardFrame.GetHashCode();
      if (titleBackground_ != null) hash ^= TitleBackground.GetHashCode();
      if (jewel_ != null) hash ^= Jewel.GetHashCode();
      if (imageBackground_ != null) hash ^= ImageBackground.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (title_ != null) hash ^= Title.GetHashCode();
      if (rulesText_ != null) hash ^= RulesText.GetHashCode();
      if (arenaFrame_ != null) hash ^= ArenaFrame.GetHashCode();
      if (cardIcons_ != null) hash ^= CardIcons.GetHashCode();
      if (targeting_ != null) hash ^= Targeting.GetHashCode();
      if (cost_ != null) hash ^= Cost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (cardBack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CardBack);
      }
      if (cardFrame_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CardFrame);
      }
      if (titleBackground_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TitleBackground);
      }
      if (jewel_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Jewel);
      }
      if (imageBackground_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ImageBackground);
      }
      if (image_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Image);
      }
      if (title_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Title);
      }
      if (rulesText_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RulesText);
      }
      if (arenaFrame_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ArenaFrame);
      }
      if (cardIcons_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CardIcons);
      }
      if (targeting_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Targeting);
      }
      if (cost_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Cost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (cardBack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CardBack);
      }
      if (cardFrame_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CardFrame);
      }
      if (titleBackground_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TitleBackground);
      }
      if (jewel_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Jewel);
      }
      if (imageBackground_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ImageBackground);
      }
      if (image_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Image);
      }
      if (title_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Title);
      }
      if (rulesText_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RulesText);
      }
      if (arenaFrame_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ArenaFrame);
      }
      if (cardIcons_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CardIcons);
      }
      if (targeting_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Targeting);
      }
      if (cost_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Cost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cardBack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CardBack);
      }
      if (cardFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CardFrame);
      }
      if (titleBackground_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TitleBackground);
      }
      if (jewel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Jewel);
      }
      if (imageBackground_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageBackground);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (title_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Title);
      }
      if (rulesText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RulesText);
      }
      if (arenaFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArenaFrame);
      }
      if (cardIcons_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CardIcons);
      }
      if (targeting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Targeting);
      }
      if (cost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RevealedCardView other) {
      if (other == null) {
        return;
      }
      if (other.cardBack_ != null) {
        if (cardBack_ == null) {
          CardBack = new global::Spelldawn.Protos.SpriteAddress();
        }
        CardBack.MergeFrom(other.CardBack);
      }
      if (other.cardFrame_ != null) {
        if (cardFrame_ == null) {
          CardFrame = new global::Spelldawn.Protos.SpriteAddress();
        }
        CardFrame.MergeFrom(other.CardFrame);
      }
      if (other.titleBackground_ != null) {
        if (titleBackground_ == null) {
          TitleBackground = new global::Spelldawn.Protos.SpriteAddress();
        }
        TitleBackground.MergeFrom(other.TitleBackground);
      }
      if (other.jewel_ != null) {
        if (jewel_ == null) {
          Jewel = new global::Spelldawn.Protos.SpriteAddress();
        }
        Jewel.MergeFrom(other.Jewel);
      }
      if (other.imageBackground_ != null) {
        if (imageBackground_ == null) {
          ImageBackground = new global::Spelldawn.Protos.SpriteAddress();
        }
        ImageBackground.MergeFrom(other.ImageBackground);
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::Spelldawn.Protos.SpriteAddress();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.title_ != null) {
        if (title_ == null) {
          Title = new global::Spelldawn.Protos.CardTitle();
        }
        Title.MergeFrom(other.Title);
      }
      if (other.rulesText_ != null) {
        if (rulesText_ == null) {
          RulesText = new global::Spelldawn.Protos.RulesText();
        }
        RulesText.MergeFrom(other.RulesText);
      }
      if (other.arenaFrame_ != null) {
        if (arenaFrame_ == null) {
          ArenaFrame = new global::Spelldawn.Protos.SpriteAddress();
        }
        ArenaFrame.MergeFrom(other.ArenaFrame);
      }
      if (other.cardIcons_ != null) {
        if (cardIcons_ == null) {
          CardIcons = new global::Spelldawn.Protos.CardIcons();
        }
        CardIcons.MergeFrom(other.CardIcons);
      }
      if (other.targeting_ != null) {
        if (targeting_ == null) {
          Targeting = new global::Spelldawn.Protos.CardTargeting();
        }
        Targeting.MergeFrom(other.Targeting);
      }
      if (other.cost_ != null) {
        if (cost_ == null) {
          Cost = new global::Spelldawn.Protos.CardCost();
        }
        Cost.MergeFrom(other.Cost);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cardBack_ == null) {
              CardBack = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(CardBack);
            break;
          }
          case 18: {
            if (cardFrame_ == null) {
              CardFrame = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(CardFrame);
            break;
          }
          case 26: {
            if (titleBackground_ == null) {
              TitleBackground = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(TitleBackground);
            break;
          }
          case 34: {
            if (jewel_ == null) {
              Jewel = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Jewel);
            break;
          }
          case 42: {
            if (imageBackground_ == null) {
              ImageBackground = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(ImageBackground);
            break;
          }
          case 50: {
            if (image_ == null) {
              Image = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Image);
            break;
          }
          case 58: {
            if (title_ == null) {
              Title = new global::Spelldawn.Protos.CardTitle();
            }
            input.ReadMessage(Title);
            break;
          }
          case 66: {
            if (rulesText_ == null) {
              RulesText = new global::Spelldawn.Protos.RulesText();
            }
            input.ReadMessage(RulesText);
            break;
          }
          case 74: {
            if (arenaFrame_ == null) {
              ArenaFrame = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(ArenaFrame);
            break;
          }
          case 82: {
            if (cardIcons_ == null) {
              CardIcons = new global::Spelldawn.Protos.CardIcons();
            }
            input.ReadMessage(CardIcons);
            break;
          }
          case 90: {
            if (targeting_ == null) {
              Targeting = new global::Spelldawn.Protos.CardTargeting();
            }
            input.ReadMessage(Targeting);
            break;
          }
          case 98: {
            if (cost_ == null) {
              Cost = new global::Spelldawn.Protos.CardCost();
            }
            input.ReadMessage(Cost);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (cardBack_ == null) {
              CardBack = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(CardBack);
            break;
          }
          case 18: {
            if (cardFrame_ == null) {
              CardFrame = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(CardFrame);
            break;
          }
          case 26: {
            if (titleBackground_ == null) {
              TitleBackground = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(TitleBackground);
            break;
          }
          case 34: {
            if (jewel_ == null) {
              Jewel = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Jewel);
            break;
          }
          case 42: {
            if (imageBackground_ == null) {
              ImageBackground = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(ImageBackground);
            break;
          }
          case 50: {
            if (image_ == null) {
              Image = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Image);
            break;
          }
          case 58: {
            if (title_ == null) {
              Title = new global::Spelldawn.Protos.CardTitle();
            }
            input.ReadMessage(Title);
            break;
          }
          case 66: {
            if (rulesText_ == null) {
              RulesText = new global::Spelldawn.Protos.RulesText();
            }
            input.ReadMessage(RulesText);
            break;
          }
          case 74: {
            if (arenaFrame_ == null) {
              ArenaFrame = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(ArenaFrame);
            break;
          }
          case 82: {
            if (cardIcons_ == null) {
              CardIcons = new global::Spelldawn.Protos.CardIcons();
            }
            input.ReadMessage(CardIcons);
            break;
          }
          case 90: {
            if (targeting_ == null) {
              Targeting = new global::Spelldawn.Protos.CardTargeting();
            }
            input.ReadMessage(Targeting);
            break;
          }
          case 98: {
            if (cost_ == null) {
              Cost = new global::Spelldawn.Protos.CardCost();
            }
            input.ReadMessage(Cost);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HiddenCardView : pb::IMessage<HiddenCardView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HiddenCardView> _parser = new pb::MessageParser<HiddenCardView>(() => new HiddenCardView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HiddenCardView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HiddenCardView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HiddenCardView(HiddenCardView other) : this() {
      cardBack_ = other.cardBack_ != null ? other.cardBack_.Clone() : null;
      cardIcons_ = other.cardIcons_ != null ? other.cardIcons_.Clone() : null;
      arenaFrame_ = other.arenaFrame_ != null ? other.arenaFrame_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HiddenCardView Clone() {
      return new HiddenCardView(this);
    }

    /// <summary>Field number for the "card_back" field.</summary>
    public const int CardBackFieldNumber = 1;
    private global::Spelldawn.Protos.SpriteAddress cardBack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress CardBack {
      get { return cardBack_; }
      set {
        cardBack_ = value;
      }
    }

    /// <summary>Field number for the "card_icons" field.</summary>
    public const int CardIconsFieldNumber = 2;
    private global::Spelldawn.Protos.CardIcons cardIcons_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardIcons CardIcons {
      get { return cardIcons_; }
      set {
        cardIcons_ = value;
      }
    }

    /// <summary>Field number for the "arena_frame" field.</summary>
    public const int ArenaFrameFieldNumber = 3;
    private global::Spelldawn.Protos.SpriteAddress arenaFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress ArenaFrame {
      get { return arenaFrame_; }
      set {
        arenaFrame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HiddenCardView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HiddenCardView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CardBack, other.CardBack)) return false;
      if (!object.Equals(CardIcons, other.CardIcons)) return false;
      if (!object.Equals(ArenaFrame, other.ArenaFrame)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cardBack_ != null) hash ^= CardBack.GetHashCode();
      if (cardIcons_ != null) hash ^= CardIcons.GetHashCode();
      if (arenaFrame_ != null) hash ^= ArenaFrame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (cardBack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CardBack);
      }
      if (cardIcons_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CardIcons);
      }
      if (arenaFrame_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ArenaFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (cardBack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CardBack);
      }
      if (cardIcons_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CardIcons);
      }
      if (arenaFrame_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ArenaFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cardBack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CardBack);
      }
      if (cardIcons_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CardIcons);
      }
      if (arenaFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArenaFrame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HiddenCardView other) {
      if (other == null) {
        return;
      }
      if (other.cardBack_ != null) {
        if (cardBack_ == null) {
          CardBack = new global::Spelldawn.Protos.SpriteAddress();
        }
        CardBack.MergeFrom(other.CardBack);
      }
      if (other.cardIcons_ != null) {
        if (cardIcons_ == null) {
          CardIcons = new global::Spelldawn.Protos.CardIcons();
        }
        CardIcons.MergeFrom(other.CardIcons);
      }
      if (other.arenaFrame_ != null) {
        if (arenaFrame_ == null) {
          ArenaFrame = new global::Spelldawn.Protos.SpriteAddress();
        }
        ArenaFrame.MergeFrom(other.ArenaFrame);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cardBack_ == null) {
              CardBack = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(CardBack);
            break;
          }
          case 18: {
            if (cardIcons_ == null) {
              CardIcons = new global::Spelldawn.Protos.CardIcons();
            }
            input.ReadMessage(CardIcons);
            break;
          }
          case 26: {
            if (arenaFrame_ == null) {
              ArenaFrame = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(ArenaFrame);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (cardBack_ == null) {
              CardBack = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(CardBack);
            break;
          }
          case 18: {
            if (cardIcons_ == null) {
              CardIcons = new global::Spelldawn.Protos.CardIcons();
            }
            input.ReadMessage(CardIcons);
            break;
          }
          case 26: {
            if (arenaFrame_ == null) {
              ArenaFrame = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(ArenaFrame);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CardView : pb::IMessage<CardView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CardView> _parser = new pb::MessageParser<CardView>(() => new CardView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardView(CardView other) : this() {
      cardId_ = other.cardId_ != null ? other.cardId_.Clone() : null;
      arenaPosition_ = other.arenaPosition_;
      switch (other.CardCase) {
        case CardOneofCase.RevealedCard:
          RevealedCard = other.RevealedCard.Clone();
          break;
        case CardOneofCase.HiddenCard:
          HiddenCard = other.HiddenCard.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardView Clone() {
      return new CardView(this);
    }

    /// <summary>Field number for the "card_id" field.</summary>
    public const int CardIdFieldNumber = 1;
    private global::Spelldawn.Protos.CardId cardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardId CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "arena_position" field.</summary>
    public const int ArenaPositionFieldNumber = 2;
    private global::Spelldawn.Protos.ArenaPosition arenaPosition_ = global::Spelldawn.Protos.ArenaPosition.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.ArenaPosition ArenaPosition {
      get { return arenaPosition_; }
      set {
        arenaPosition_ = value;
      }
    }

    /// <summary>Field number for the "revealed_card" field.</summary>
    public const int RevealedCardFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.RevealedCardView RevealedCard {
      get { return cardCase_ == CardOneofCase.RevealedCard ? (global::Spelldawn.Protos.RevealedCardView) card_ : null; }
      set {
        card_ = value;
        cardCase_ = value == null ? CardOneofCase.None : CardOneofCase.RevealedCard;
      }
    }

    /// <summary>Field number for the "hidden_card" field.</summary>
    public const int HiddenCardFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.HiddenCardView HiddenCard {
      get { return cardCase_ == CardOneofCase.HiddenCard ? (global::Spelldawn.Protos.HiddenCardView) card_ : null; }
      set {
        card_ = value;
        cardCase_ = value == null ? CardOneofCase.None : CardOneofCase.HiddenCard;
      }
    }

    private object card_;
    /// <summary>Enum of possible cases for the "card" oneof.</summary>
    public enum CardOneofCase {
      None = 0,
      RevealedCard = 3,
      HiddenCard = 4,
    }
    private CardOneofCase cardCase_ = CardOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardOneofCase CardCase {
      get { return cardCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCard() {
      cardCase_ = CardOneofCase.None;
      card_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CardId, other.CardId)) return false;
      if (ArenaPosition != other.ArenaPosition) return false;
      if (!object.Equals(RevealedCard, other.RevealedCard)) return false;
      if (!object.Equals(HiddenCard, other.HiddenCard)) return false;
      if (CardCase != other.CardCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cardId_ != null) hash ^= CardId.GetHashCode();
      if (ArenaPosition != global::Spelldawn.Protos.ArenaPosition.Unspecified) hash ^= ArenaPosition.GetHashCode();
      if (cardCase_ == CardOneofCase.RevealedCard) hash ^= RevealedCard.GetHashCode();
      if (cardCase_ == CardOneofCase.HiddenCard) hash ^= HiddenCard.GetHashCode();
      hash ^= (int) cardCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (cardId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CardId);
      }
      if (ArenaPosition != global::Spelldawn.Protos.ArenaPosition.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ArenaPosition);
      }
      if (cardCase_ == CardOneofCase.RevealedCard) {
        output.WriteRawTag(26);
        output.WriteMessage(RevealedCard);
      }
      if (cardCase_ == CardOneofCase.HiddenCard) {
        output.WriteRawTag(34);
        output.WriteMessage(HiddenCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (cardId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CardId);
      }
      if (ArenaPosition != global::Spelldawn.Protos.ArenaPosition.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ArenaPosition);
      }
      if (cardCase_ == CardOneofCase.RevealedCard) {
        output.WriteRawTag(26);
        output.WriteMessage(RevealedCard);
      }
      if (cardCase_ == CardOneofCase.HiddenCard) {
        output.WriteRawTag(34);
        output.WriteMessage(HiddenCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cardId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CardId);
      }
      if (ArenaPosition != global::Spelldawn.Protos.ArenaPosition.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ArenaPosition);
      }
      if (cardCase_ == CardOneofCase.RevealedCard) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RevealedCard);
      }
      if (cardCase_ == CardOneofCase.HiddenCard) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HiddenCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardView other) {
      if (other == null) {
        return;
      }
      if (other.cardId_ != null) {
        if (cardId_ == null) {
          CardId = new global::Spelldawn.Protos.CardId();
        }
        CardId.MergeFrom(other.CardId);
      }
      if (other.ArenaPosition != global::Spelldawn.Protos.ArenaPosition.Unspecified) {
        ArenaPosition = other.ArenaPosition;
      }
      switch (other.CardCase) {
        case CardOneofCase.RevealedCard:
          if (RevealedCard == null) {
            RevealedCard = new global::Spelldawn.Protos.RevealedCardView();
          }
          RevealedCard.MergeFrom(other.RevealedCard);
          break;
        case CardOneofCase.HiddenCard:
          if (HiddenCard == null) {
            HiddenCard = new global::Spelldawn.Protos.HiddenCardView();
          }
          HiddenCard.MergeFrom(other.HiddenCard);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cardId_ == null) {
              CardId = new global::Spelldawn.Protos.CardId();
            }
            input.ReadMessage(CardId);
            break;
          }
          case 16: {
            ArenaPosition = (global::Spelldawn.Protos.ArenaPosition) input.ReadEnum();
            break;
          }
          case 26: {
            global::Spelldawn.Protos.RevealedCardView subBuilder = new global::Spelldawn.Protos.RevealedCardView();
            if (cardCase_ == CardOneofCase.RevealedCard) {
              subBuilder.MergeFrom(RevealedCard);
            }
            input.ReadMessage(subBuilder);
            RevealedCard = subBuilder;
            break;
          }
          case 34: {
            global::Spelldawn.Protos.HiddenCardView subBuilder = new global::Spelldawn.Protos.HiddenCardView();
            if (cardCase_ == CardOneofCase.HiddenCard) {
              subBuilder.MergeFrom(HiddenCard);
            }
            input.ReadMessage(subBuilder);
            HiddenCard = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (cardId_ == null) {
              CardId = new global::Spelldawn.Protos.CardId();
            }
            input.ReadMessage(CardId);
            break;
          }
          case 16: {
            ArenaPosition = (global::Spelldawn.Protos.ArenaPosition) input.ReadEnum();
            break;
          }
          case 26: {
            global::Spelldawn.Protos.RevealedCardView subBuilder = new global::Spelldawn.Protos.RevealedCardView();
            if (cardCase_ == CardOneofCase.RevealedCard) {
              subBuilder.MergeFrom(RevealedCard);
            }
            input.ReadMessage(subBuilder);
            RevealedCard = subBuilder;
            break;
          }
          case 34: {
            global::Spelldawn.Protos.HiddenCardView subBuilder = new global::Spelldawn.Protos.HiddenCardView();
            if (cardCase_ == CardOneofCase.HiddenCard) {
              subBuilder.MergeFrom(HiddenCard);
            }
            input.ReadMessage(subBuilder);
            HiddenCard = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HandView : pb::IMessage<HandView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HandView> _parser = new pb::MessageParser<HandView>(() => new HandView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandView(HandView other) : this() {
      cards_ = other.cards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandView Clone() {
      return new HandView(this);
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Spelldawn.Protos.CardView> _repeated_cards_codec
        = pb::FieldCodec.ForMessage(10, global::Spelldawn.Protos.CardView.Parser);
    private readonly pbc::RepeatedField<global::Spelldawn.Protos.CardView> cards_ = new pbc::RepeatedField<global::Spelldawn.Protos.CardView>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Spelldawn.Protos.CardView> Cards {
      get { return cards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cards_.Equals(other.cards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      cards_.WriteTo(output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandView other) {
      if (other == null) {
        return;
      }
      cards_.Add(other.cards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DiscardPileView : pb::IMessage<DiscardPileView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiscardPileView> _parser = new pb::MessageParser<DiscardPileView>(() => new DiscardPileView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DiscardPileView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiscardPileView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiscardPileView(DiscardPileView other) : this() {
      cards_ = other.cards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiscardPileView Clone() {
      return new DiscardPileView(this);
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Spelldawn.Protos.CardView> _repeated_cards_codec
        = pb::FieldCodec.ForMessage(10, global::Spelldawn.Protos.CardView.Parser);
    private readonly pbc::RepeatedField<global::Spelldawn.Protos.CardView> cards_ = new pbc::RepeatedField<global::Spelldawn.Protos.CardView>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Spelldawn.Protos.CardView> Cards {
      get { return cards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DiscardPileView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DiscardPileView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cards_.Equals(other.cards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      cards_.WriteTo(output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DiscardPileView other) {
      if (other == null) {
        return;
      }
      cards_.Add(other.cards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo(PlayerInfo other) : this() {
      name_ = other.name_;
      portrait_ = other.portrait_ != null ? other.portrait_.Clone() : null;
      identityCard_ = other.identityCard_ != null ? other.identityCard_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo Clone() {
      return new PlayerInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "portrait" field.</summary>
    public const int PortraitFieldNumber = 2;
    private global::Spelldawn.Protos.SpriteAddress portrait_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress Portrait {
      get { return portrait_; }
      set {
        portrait_ = value;
      }
    }

    /// <summary>Field number for the "identity_card" field.</summary>
    public const int IdentityCardFieldNumber = 3;
    private global::Spelldawn.Protos.CardView identityCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.CardView IdentityCard {
      get { return identityCard_; }
      set {
        identityCard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Portrait, other.Portrait)) return false;
      if (!object.Equals(IdentityCard, other.IdentityCard)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (portrait_ != null) hash ^= Portrait.GetHashCode();
      if (identityCard_ != null) hash ^= IdentityCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (portrait_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Portrait);
      }
      if (identityCard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(IdentityCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (portrait_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Portrait);
      }
      if (identityCard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(IdentityCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (portrait_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Portrait);
      }
      if (identityCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdentityCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.portrait_ != null) {
        if (portrait_ == null) {
          Portrait = new global::Spelldawn.Protos.SpriteAddress();
        }
        Portrait.MergeFrom(other.Portrait);
      }
      if (other.identityCard_ != null) {
        if (identityCard_ == null) {
          IdentityCard = new global::Spelldawn.Protos.CardView();
        }
        IdentityCard.MergeFrom(other.IdentityCard);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (portrait_ == null) {
              Portrait = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Portrait);
            break;
          }
          case 26: {
            if (identityCard_ == null) {
              IdentityCard = new global::Spelldawn.Protos.CardView();
            }
            input.ReadMessage(IdentityCard);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (portrait_ == null) {
              Portrait = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(Portrait);
            break;
          }
          case 26: {
            if (identityCard_ == null) {
              IdentityCard = new global::Spelldawn.Protos.CardView();
            }
            input.ReadMessage(IdentityCard);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ManaView : pb::IMessage<ManaView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ManaView> _parser = new pb::MessageParser<ManaView>(() => new ManaView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ManaView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManaView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManaView(ManaView other) : this() {
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManaView Clone() {
      return new ManaView(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ManaView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ManaView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Amount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Amount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ManaView other) {
      if (other == null) {
        return;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScoreView : pb::IMessage<ScoreView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScoreView> _parser = new pb::MessageParser<ScoreView>(() => new ScoreView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScoreView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreView(ScoreView other) : this() {
      score_ = other.score_;
      scoredCards_ = other.scoredCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreView Clone() {
      return new ScoreView(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "scored_cards" field.</summary>
    public const int ScoredCardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Spelldawn.Protos.CardView> _repeated_scoredCards_codec
        = pb::FieldCodec.ForMessage(18, global::Spelldawn.Protos.CardView.Parser);
    private readonly pbc::RepeatedField<global::Spelldawn.Protos.CardView> scoredCards_ = new pbc::RepeatedField<global::Spelldawn.Protos.CardView>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Spelldawn.Protos.CardView> ScoredCards {
      get { return scoredCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScoreView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScoreView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Score != other.Score) return false;
      if(!scoredCards_.Equals(other.scoredCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0) hash ^= Score.GetHashCode();
      hash ^= scoredCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Score != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Score);
      }
      scoredCards_.WriteTo(output, _repeated_scoredCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Score != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Score);
      }
      scoredCards_.WriteTo(ref output, _repeated_scoredCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      size += scoredCards_.CalculateSize(_repeated_scoredCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScoreView other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      scoredCards_.Add(other.scoredCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Score = input.ReadInt32();
            break;
          }
          case 18: {
            scoredCards_.AddEntriesFrom(input, _repeated_scoredCards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Score = input.ReadInt32();
            break;
          }
          case 18: {
            scoredCards_.AddEntriesFrom(ref input, _repeated_scoredCards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoomIcon : pb::IMessage<RoomIcon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomIcon> _parser = new pb::MessageParser<RoomIcon>(() => new RoomIcon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomIcon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomIcon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomIcon(RoomIcon other) : this() {
      roomIcon_ = other.roomIcon_ != null ? other.roomIcon_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomIcon Clone() {
      return new RoomIcon(this);
    }

    /// <summary>Field number for the "room_icon" field.</summary>
    public const int RoomIcon_FieldNumber = 1;
    private global::Spelldawn.Protos.SpriteAddress roomIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.SpriteAddress RoomIcon_ {
      get { return roomIcon_; }
      set {
        roomIcon_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomIcon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomIcon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoomIcon_, other.RoomIcon_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (roomIcon_ != null) hash ^= RoomIcon_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (roomIcon_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomIcon_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (roomIcon_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomIcon_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (roomIcon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomIcon_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomIcon other) {
      if (other == null) {
        return;
      }
      if (other.roomIcon_ != null) {
        if (roomIcon_ == null) {
          RoomIcon_ = new global::Spelldawn.Protos.SpriteAddress();
        }
        RoomIcon_.MergeFrom(other.RoomIcon_);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (roomIcon_ == null) {
              RoomIcon_ = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(RoomIcon_);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (roomIcon_ == null) {
              RoomIcon_ = new global::Spelldawn.Protos.SpriteAddress();
            }
            input.ReadMessage(RoomIcon_);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoomView : pb::IMessage<RoomView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomView> _parser = new pb::MessageParser<RoomView>(() => new RoomView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomView(RoomView other) : this() {
      roomId_ = other.roomId_ != null ? other.roomId_.Clone() : null;
      roomIcon_ = other.roomIcon_ != null ? other.roomIcon_.Clone() : null;
      cards_ = other.cards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomView Clone() {
      return new RoomView(this);
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private global::Spelldawn.Protos.RoomId roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.RoomId RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "room_icon" field.</summary>
    public const int RoomIconFieldNumber = 2;
    private global::Spelldawn.Protos.RoomIcon roomIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.RoomIcon RoomIcon {
      get { return roomIcon_; }
      set {
        roomIcon_ = value;
      }
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Spelldawn.Protos.CardView> _repeated_cards_codec
        = pb::FieldCodec.ForMessage(26, global::Spelldawn.Protos.CardView.Parser);
    private readonly pbc::RepeatedField<global::Spelldawn.Protos.CardView> cards_ = new pbc::RepeatedField<global::Spelldawn.Protos.CardView>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Spelldawn.Protos.CardView> Cards {
      get { return cards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoomId, other.RoomId)) return false;
      if (!object.Equals(RoomIcon, other.RoomIcon)) return false;
      if(!cards_.Equals(other.cards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (roomId_ != null) hash ^= RoomId.GetHashCode();
      if (roomIcon_ != null) hash ^= RoomIcon.GetHashCode();
      hash ^= cards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (roomId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomId);
      }
      if (roomIcon_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RoomIcon);
      }
      cards_.WriteTo(output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (roomId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomId);
      }
      if (roomIcon_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RoomIcon);
      }
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (roomId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomId);
      }
      if (roomIcon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomIcon);
      }
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomView other) {
      if (other == null) {
        return;
      }
      if (other.roomId_ != null) {
        if (roomId_ == null) {
          RoomId = new global::Spelldawn.Protos.RoomId();
        }
        RoomId.MergeFrom(other.RoomId);
      }
      if (other.roomIcon_ != null) {
        if (roomIcon_ == null) {
          RoomIcon = new global::Spelldawn.Protos.RoomIcon();
        }
        RoomIcon.MergeFrom(other.RoomIcon);
      }
      cards_.Add(other.cards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (roomId_ == null) {
              RoomId = new global::Spelldawn.Protos.RoomId();
            }
            input.ReadMessage(RoomId);
            break;
          }
          case 18: {
            if (roomIcon_ == null) {
              RoomIcon = new global::Spelldawn.Protos.RoomIcon();
            }
            input.ReadMessage(RoomIcon);
            break;
          }
          case 26: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (roomId_ == null) {
              RoomId = new global::Spelldawn.Protos.RoomId();
            }
            input.ReadMessage(RoomId);
            break;
          }
          case 18: {
            if (roomIcon_ == null) {
              RoomIcon = new global::Spelldawn.Protos.RoomIcon();
            }
            input.ReadMessage(RoomIcon);
            break;
          }
          case 26: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ArenaView : pb::IMessage<ArenaView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArenaView> _parser = new pb::MessageParser<ArenaView>(() => new ArenaView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArenaView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaView(ArenaView other) : this() {
      overlordPerspective_ = other.overlordPerspective_;
      rooms_ = other.rooms_.Clone();
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaView Clone() {
      return new ArenaView(this);
    }

    /// <summary>Field number for the "overlord_perspective" field.</summary>
    public const int OverlordPerspectiveFieldNumber = 1;
    private bool overlordPerspective_;
    /// <summary>
    ///*
    /// If true, render rooms at the bottom of the screen, if false, render items
    /// at the bottom.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OverlordPerspective {
      get { return overlordPerspective_; }
      set {
        overlordPerspective_ = value;
      }
    }

    /// <summary>Field number for the "rooms" field.</summary>
    public const int RoomsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Spelldawn.Protos.RoomView> _repeated_rooms_codec
        = pb::FieldCodec.ForMessage(18, global::Spelldawn.Protos.RoomView.Parser);
    private readonly pbc::RepeatedField<global::Spelldawn.Protos.RoomView> rooms_ = new pbc::RepeatedField<global::Spelldawn.Protos.RoomView>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Spelldawn.Protos.RoomView> Rooms {
      get { return rooms_; }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Spelldawn.Protos.CardView> _repeated_items_codec
        = pb::FieldCodec.ForMessage(26, global::Spelldawn.Protos.CardView.Parser);
    private readonly pbc::RepeatedField<global::Spelldawn.Protos.CardView> items_ = new pbc::RepeatedField<global::Spelldawn.Protos.CardView>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Spelldawn.Protos.CardView> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArenaView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArenaView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OverlordPerspective != other.OverlordPerspective) return false;
      if(!rooms_.Equals(other.rooms_)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OverlordPerspective != false) hash ^= OverlordPerspective.GetHashCode();
      hash ^= rooms_.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OverlordPerspective != false) {
        output.WriteRawTag(8);
        output.WriteBool(OverlordPerspective);
      }
      rooms_.WriteTo(output, _repeated_rooms_codec);
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OverlordPerspective != false) {
        output.WriteRawTag(8);
        output.WriteBool(OverlordPerspective);
      }
      rooms_.WriteTo(ref output, _repeated_rooms_codec);
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OverlordPerspective != false) {
        size += 1 + 1;
      }
      size += rooms_.CalculateSize(_repeated_rooms_codec);
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArenaView other) {
      if (other == null) {
        return;
      }
      if (other.OverlordPerspective != false) {
        OverlordPerspective = other.OverlordPerspective;
      }
      rooms_.Add(other.rooms_);
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OverlordPerspective = input.ReadBool();
            break;
          }
          case 18: {
            rooms_.AddEntriesFrom(input, _repeated_rooms_codec);
            break;
          }
          case 26: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OverlordPerspective = input.ReadBool();
            break;
          }
          case 18: {
            rooms_.AddEntriesFrom(ref input, _repeated_rooms_codec);
            break;
          }
          case 26: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActionTrackerView : pb::IMessage<ActionTrackerView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionTrackerView> _parser = new pb::MessageParser<ActionTrackerView>(() => new ActionTrackerView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActionTrackerView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionTrackerView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionTrackerView(ActionTrackerView other) : this() {
      availableActionCount_ = other.availableActionCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionTrackerView Clone() {
      return new ActionTrackerView(this);
    }

    /// <summary>Field number for the "available_action_count" field.</summary>
    public const int AvailableActionCountFieldNumber = 1;
    private int availableActionCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvailableActionCount {
      get { return availableActionCount_; }
      set {
        availableActionCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActionTrackerView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActionTrackerView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvailableActionCount != other.AvailableActionCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AvailableActionCount != 0) hash ^= AvailableActionCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AvailableActionCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AvailableActionCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AvailableActionCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AvailableActionCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AvailableActionCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailableActionCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActionTrackerView other) {
      if (other == null) {
        return;
      }
      if (other.AvailableActionCount != 0) {
        AvailableActionCount = other.AvailableActionCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AvailableActionCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AvailableActionCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeckView : pb::IMessage<DeckView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeckView> _parser = new pb::MessageParser<DeckView>(() => new DeckView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeckView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckView(DeckView other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckView Clone() {
      return new DeckView(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeckView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeckView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeckView other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerView : pb::IMessage<PlayerView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerView> _parser = new pb::MessageParser<PlayerView>(() => new PlayerView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerView(PlayerView other) : this() {
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      score_ = other.score_ != null ? other.score_.Clone() : null;
      hand_ = other.hand_ != null ? other.hand_.Clone() : null;
      mana_ = other.mana_ != null ? other.mana_.Clone() : null;
      discardPile_ = other.discardPile_ != null ? other.discardPile_.Clone() : null;
      actionTracker_ = other.actionTracker_ != null ? other.actionTracker_.Clone() : null;
      deck_ = other.deck_ != null ? other.deck_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerView Clone() {
      return new PlayerView(this);
    }

    /// <summary>Field number for the "player_info" field.</summary>
    public const int PlayerInfoFieldNumber = 1;
    private global::Spelldawn.Protos.PlayerInfo playerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.PlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 2;
    private global::Spelldawn.Protos.ScoreView score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.ScoreView Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "hand" field.</summary>
    public const int HandFieldNumber = 3;
    private global::Spelldawn.Protos.HandView hand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.HandView Hand {
      get { return hand_; }
      set {
        hand_ = value;
      }
    }

    /// <summary>Field number for the "mana" field.</summary>
    public const int ManaFieldNumber = 4;
    private global::Spelldawn.Protos.ManaView mana_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.ManaView Mana {
      get { return mana_; }
      set {
        mana_ = value;
      }
    }

    /// <summary>Field number for the "discard_pile" field.</summary>
    public const int DiscardPileFieldNumber = 5;
    private global::Spelldawn.Protos.DiscardPileView discardPile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.DiscardPileView DiscardPile {
      get { return discardPile_; }
      set {
        discardPile_ = value;
      }
    }

    /// <summary>Field number for the "action_tracker" field.</summary>
    public const int ActionTrackerFieldNumber = 6;
    private global::Spelldawn.Protos.ActionTrackerView actionTracker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.ActionTrackerView ActionTracker {
      get { return actionTracker_; }
      set {
        actionTracker_ = value;
      }
    }

    /// <summary>Field number for the "deck" field.</summary>
    public const int DeckFieldNumber = 7;
    private global::Spelldawn.Protos.DeckView deck_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.DeckView Deck {
      get { return deck_; }
      set {
        deck_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      if (!object.Equals(Score, other.Score)) return false;
      if (!object.Equals(Hand, other.Hand)) return false;
      if (!object.Equals(Mana, other.Mana)) return false;
      if (!object.Equals(DiscardPile, other.DiscardPile)) return false;
      if (!object.Equals(ActionTracker, other.ActionTracker)) return false;
      if (!object.Equals(Deck, other.Deck)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (score_ != null) hash ^= Score.GetHashCode();
      if (hand_ != null) hash ^= Hand.GetHashCode();
      if (mana_ != null) hash ^= Mana.GetHashCode();
      if (discardPile_ != null) hash ^= DiscardPile.GetHashCode();
      if (actionTracker_ != null) hash ^= ActionTracker.GetHashCode();
      if (deck_ != null) hash ^= Deck.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (playerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerInfo);
      }
      if (score_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Score);
      }
      if (hand_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Hand);
      }
      if (mana_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Mana);
      }
      if (discardPile_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DiscardPile);
      }
      if (actionTracker_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ActionTracker);
      }
      if (deck_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Deck);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (playerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerInfo);
      }
      if (score_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Score);
      }
      if (hand_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Hand);
      }
      if (mana_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Mana);
      }
      if (discardPile_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DiscardPile);
      }
      if (actionTracker_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ActionTracker);
      }
      if (deck_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Deck);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (score_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Score);
      }
      if (hand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hand);
      }
      if (mana_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mana);
      }
      if (discardPile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DiscardPile);
      }
      if (actionTracker_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActionTracker);
      }
      if (deck_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deck);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerView other) {
      if (other == null) {
        return;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::Spelldawn.Protos.PlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      if (other.score_ != null) {
        if (score_ == null) {
          Score = new global::Spelldawn.Protos.ScoreView();
        }
        Score.MergeFrom(other.Score);
      }
      if (other.hand_ != null) {
        if (hand_ == null) {
          Hand = new global::Spelldawn.Protos.HandView();
        }
        Hand.MergeFrom(other.Hand);
      }
      if (other.mana_ != null) {
        if (mana_ == null) {
          Mana = new global::Spelldawn.Protos.ManaView();
        }
        Mana.MergeFrom(other.Mana);
      }
      if (other.discardPile_ != null) {
        if (discardPile_ == null) {
          DiscardPile = new global::Spelldawn.Protos.DiscardPileView();
        }
        DiscardPile.MergeFrom(other.DiscardPile);
      }
      if (other.actionTracker_ != null) {
        if (actionTracker_ == null) {
          ActionTracker = new global::Spelldawn.Protos.ActionTrackerView();
        }
        ActionTracker.MergeFrom(other.ActionTracker);
      }
      if (other.deck_ != null) {
        if (deck_ == null) {
          Deck = new global::Spelldawn.Protos.DeckView();
        }
        Deck.MergeFrom(other.Deck);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Spelldawn.Protos.PlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 18: {
            if (score_ == null) {
              Score = new global::Spelldawn.Protos.ScoreView();
            }
            input.ReadMessage(Score);
            break;
          }
          case 26: {
            if (hand_ == null) {
              Hand = new global::Spelldawn.Protos.HandView();
            }
            input.ReadMessage(Hand);
            break;
          }
          case 34: {
            if (mana_ == null) {
              Mana = new global::Spelldawn.Protos.ManaView();
            }
            input.ReadMessage(Mana);
            break;
          }
          case 42: {
            if (discardPile_ == null) {
              DiscardPile = new global::Spelldawn.Protos.DiscardPileView();
            }
            input.ReadMessage(DiscardPile);
            break;
          }
          case 50: {
            if (actionTracker_ == null) {
              ActionTracker = new global::Spelldawn.Protos.ActionTrackerView();
            }
            input.ReadMessage(ActionTracker);
            break;
          }
          case 58: {
            if (deck_ == null) {
              Deck = new global::Spelldawn.Protos.DeckView();
            }
            input.ReadMessage(Deck);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Spelldawn.Protos.PlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 18: {
            if (score_ == null) {
              Score = new global::Spelldawn.Protos.ScoreView();
            }
            input.ReadMessage(Score);
            break;
          }
          case 26: {
            if (hand_ == null) {
              Hand = new global::Spelldawn.Protos.HandView();
            }
            input.ReadMessage(Hand);
            break;
          }
          case 34: {
            if (mana_ == null) {
              Mana = new global::Spelldawn.Protos.ManaView();
            }
            input.ReadMessage(Mana);
            break;
          }
          case 42: {
            if (discardPile_ == null) {
              DiscardPile = new global::Spelldawn.Protos.DiscardPileView();
            }
            input.ReadMessage(DiscardPile);
            break;
          }
          case 50: {
            if (actionTracker_ == null) {
              ActionTracker = new global::Spelldawn.Protos.ActionTrackerView();
            }
            input.ReadMessage(ActionTracker);
            break;
          }
          case 58: {
            if (deck_ == null) {
              Deck = new global::Spelldawn.Protos.DeckView();
            }
            input.ReadMessage(Deck);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameView : pb::IMessage<GameView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameView> _parser = new pb::MessageParser<GameView>(() => new GameView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spelldawn.Protos.GameViewReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameView(GameView other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      opponent_ = other.opponent_ != null ? other.opponent_.Clone() : null;
      arena_ = other.arena_ != null ? other.arena_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameView Clone() {
      return new GameView(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::Spelldawn.Protos.PlayerView user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.PlayerView User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "opponent" field.</summary>
    public const int OpponentFieldNumber = 2;
    private global::Spelldawn.Protos.PlayerView opponent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.PlayerView Opponent {
      get { return opponent_; }
      set {
        opponent_ = value;
      }
    }

    /// <summary>Field number for the "arena" field.</summary>
    public const int ArenaFieldNumber = 3;
    private global::Spelldawn.Protos.ArenaView arena_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spelldawn.Protos.ArenaView Arena {
      get { return arena_; }
      set {
        arena_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Opponent, other.Opponent)) return false;
      if (!object.Equals(Arena, other.Arena)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (opponent_ != null) hash ^= Opponent.GetHashCode();
      if (arena_ != null) hash ^= Arena.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (opponent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Opponent);
      }
      if (arena_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Arena);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (opponent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Opponent);
      }
      if (arena_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Arena);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (opponent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Opponent);
      }
      if (arena_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Arena);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameView other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Spelldawn.Protos.PlayerView();
        }
        User.MergeFrom(other.User);
      }
      if (other.opponent_ != null) {
        if (opponent_ == null) {
          Opponent = new global::Spelldawn.Protos.PlayerView();
        }
        Opponent.MergeFrom(other.Opponent);
      }
      if (other.arena_ != null) {
        if (arena_ == null) {
          Arena = new global::Spelldawn.Protos.ArenaView();
        }
        Arena.MergeFrom(other.Arena);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::Spelldawn.Protos.PlayerView();
            }
            input.ReadMessage(User);
            break;
          }
          case 18: {
            if (opponent_ == null) {
              Opponent = new global::Spelldawn.Protos.PlayerView();
            }
            input.ReadMessage(Opponent);
            break;
          }
          case 26: {
            if (arena_ == null) {
              Arena = new global::Spelldawn.Protos.ArenaView();
            }
            input.ReadMessage(Arena);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::Spelldawn.Protos.PlayerView();
            }
            input.ReadMessage(User);
            break;
          }
          case 18: {
            if (opponent_ == null) {
              Opponent = new global::Spelldawn.Protos.PlayerView();
            }
            input.ReadMessage(Opponent);
            break;
          }
          case 26: {
            if (arena_ == null) {
              Arena = new global::Spelldawn.Protos.ArenaView();
            }
            input.ReadMessage(Arena);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
